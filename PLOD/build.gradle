apply plugin: 'com.android.application'


//android.applicationVariants.all { variant ->
//    variant.mergeResources.doFirst {
//        def isReleaseMode = false
//        for(String s : gradle.startParameter.taskNames) {
//            if(s.contains("Release")) {
//                isReleaseMode=true
//                break
//            }
//        }
//        if (isReleaseMode)
//        {
//            android.sourceSets.main.assets.srcDirs = ['src/main/assets_release']
//            android.sourceSets.debug.assets.srcDirs = ['src/main/assets_release']
//            android.sourceSets.release.assets.srcDirs = ['src/main/assets_release']
//        }
//    }
//}

//android.sourceSets.main.assets.srcDirs = ['src/main/assets_release']
//android.sourceSets.debug.assets.srcDirs = ['src/main/assets_release']
android.sourceSets.release.assets.srcDirs = ['src/main/assets_release']

android {
//    tasks.whenTaskAdded { task ->
//        if (task.name.contains("lint")
////如果instant run不生效，把clean这行干掉
//                ||task.name.equals("clean")
//                //如果项目中有用到aidl则不可以舍弃这个任务
//                ||task.name.contains("Aidl")
////用不到测试的时候就可以先关闭
//                ||task.name.contains("mockableAndroidJar")
//                ||task.name.contains("UnitTest")
//                ||task.name.contains("AndroidTest")
////用不到NDK和JNI的也关闭掉
//                || task.name.contains("Ndk")
//                || task.name.contains("Jni")
//        ) {
//            task.enabled = true
//        }
//    }

    lintOptions {
        //tasks.lint.enabled = false
        checkReleaseBuilds false
        abortOnError false
    }
    compileSdkVersion ver_compileSdkVersion

    defaultConfig {
        applicationId "com.knziha.plod.plaindict"
        minSdkVersion ver_minsdk
        targetSdkVersion ver_aimsdk
        versionCode 97
        versionName "7.0.1"
        vectorDrawables.generatedDensities = ['hdpi']
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
//    externalNativeBuild {
//        cmake {
//            path "src/main/cpp/CMakeLists.txt"
//        }
//    }

//    buildFeatures {
//        dataBinding = true
//    }
    dataBinding{
        enabled=true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        debug {
            buildConfigField "boolean","isDebug","true"
            aaptOptions {
                ignoreAssetsPattern '!Markjs:!pdfjs:!Search'
            }
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            buildConfigField "boolean","isDebug","false"
        }
    }

    sourceSets {
        def isReleaseMode = false
        for(String s : gradle.startParameter.taskNames) {
            if(s.contains("Release")) {
                isReleaseMode=true
                break
            }
        }
        main {
            if(isReleaseMode) {
                assets.srcDirs = ['src/main/assets_release']
            }
        }
    }
}

task delog {
    group 'delog'
    description 'delog'
    doLast {
        def gradle = project.getGradle()
        new File("${gradle.getGradleUserHomeDir().getAbsolutePath()}/daemon/${gradle.getGradleVersion()}").listFiles().each {
            if (it.getName().endsWith('.out.log')) {
                logger.debug("Cleaning up daemon log file $it")
                it.delete()
            }
        }
    }
}

dependencies {
    configurations {
        all {
            exclude module: 'httpclient'
            exclude module: 'commons-logging'
        }
    }
    //api 'com.implimentz:unsafe:0.0.6'

    //api "com.github.luben:zstd-jni:1.5.0-4@aar"

    //api 'org.lz4:lz4-pure-java:1.8.0'

    implementation 'com.alibaba:fastjson:1.2.62'
    api (libs_coordinator){
        exclude module:"core"
    }
    //api 'org.jruby.joni:joni:2.1.30'
    //api 'org.jruby.jcodings:jcodings:1.0.55'
    //implementation 'com.android.support:support-dynamic-animation:27.1.1'
    api 'org.anarres.lzo:lzo-core:1.0.6'
    api project(path: ':viewpager')
    api project(path: ':GestureView')
    //implementation 'com.android.volley:volley:1.2.0'

    testImplementation 'org.jdom:jdom:2.0.2'


//    compileOnly project(':Metaline:Metaline')
//    annotationProcessor project(':Metaline:Metaline')
//    testImplementation project(':Metaline:Metaline')
//    testAnnotationProcessor project(':Metaline:Metaline')

    compileOnly libs_metaline
    annotationProcessor libs_metaline
    testImplementation libs_metaline
    testAnnotationProcessor libs_metaline

    testImplementation 'com.google.javascript:closure-compiler:v20211107'

    api (libs_ctext)
    api project(':recyclerViewFastScroller')
    api project(':twowaygridview')
    if (use_compat_official == '1') {
        api(libs_compat)
    } else {
        implementation project(':AxtAppCompat')
        implementation(libs_appres){
            exclude module:"core"
        }
        configurations {
            //all*.exclude group: 'androidx.appcompat'
        }
    }
    implementation project(':AweDesigner')

    if (use_mat_official == '1') {
        api(libs_mat) {
            exclude module: "appcompat"
            exclude module: "appcompat-resources"
        }
    } else {
        implementation project(':AweDesigner')
    }
    if (use_prefer_official == '1') {
        api(libs_prefer) {
            exclude module: "appcompat"
            exclude module: "appcompat-resources"
        }
    } else {
        api(project(':AppPreference'))
    }
    api project(':drag_sort_lib')
    api project(':colorpicker')
    api project(':filepicker')

    api project(':Logger')
    api project(':Paging')

    api fileTree(include: ['*.jar'], dir: 'libs')
    api(libs_anno)
    testImplementation 'junit:junit:4.12'
    //implementation 'me.weishu:free_reflection:2.1.0'
    api ('androidx.palette:palette:1.0.0'){
        exclude module:"core"
    }
    implementation 'org.jetbrains:annotations:15.0'

    implementation "io.noties.markwon:core:4.5.0"
    //api ('com.github.barteksc:pdfium-android:1.9.0')

    implementation 'com.bytedance.boost_multidex:boost_multidex:1.0.1'

    implementation 'com.squareup.okhttp3:okhttp:3.12.13'
    //implementation 'org.simpleframework:simple-xml:2.7.1'

    implementation ('androidx.percentlayout:percentlayout:1.0.0'){
        exclude module:"core"
    }


//    api 'org.apache.lucene:lucene-core:8.0.0'

    //api 'org.apache.lucene:lucene-core:4.7.0'
    api 'org.appxmod.lucene:Core:1.0.0'
    api ('org.apache.lucene:lucene-queryparser:4.7.0'){
        exclude module:"lucene-core"
    }
    api ('org.apache.lucene:lucene-highlighter:4.7.0'){
        exclude module:"lucene-core"
    }
    api ('org.apache.lucene:lucene-analyzers-common:4.7.0'){
        exclude module:"lucene-core"
    }

    api ('com.janeluo:ikanalyzer:2012_u6'){
        exclude module:"lucene-core"
    }

    //api 'com.ibm.icu:icu4j:70.1'



    implementation 'org.jsoup:jsoup:1.15.3'

   // implementation fileTree(dir: 'lib', include: ['*.jar'])


}
